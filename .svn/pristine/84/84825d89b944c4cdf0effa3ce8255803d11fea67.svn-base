<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ taglib uri="http://www.springframework.org/tags" prefix="spring"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c"%>
<%@ taglib uri="http://www.springframework.org/tags/form" prefix="form"%>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.4.10/dist/sweetalert2.min.js"></script>
<link href="<%=request.getContextPath()%>/resources/css/gridstack.min.css" rel="stylesheet" />
<link href="${pageContext.request.contextPath }/resources/css/ptStyle.css" rel="stylesheet" />
<title>물리치료사</title>
<style>
	.scroller {
    overflow-y: auto;
    overflow-x: auto;
    height: 180px;
    width: 100%;
    position: sticky;
	}
	.search-form{
	padding-top: 5px;
	padding-bottom: 5px;
	}
	.h4-title1 {
	   margin-bottom: 5px;
	
	}
	.grid-stack-item-content {
		padding: 15px;
	}
	.input-submit-button{
	    width: 5.25rem;
	    height: 1.7rem;
	    background-color: #004262;
	    color: white;
	    border: none;
	    float: right;
	    margin: 0.188rem;
	    /* box-shadow: 1px 1px 2px grey; */
	    font-size: 13px;
	}
	
	.ptDocument-input{    
		width: 14.25rem;
	    height: 1.6rem;
	    /* padding-bottom: 5px; */
	    font-size: 16px;
	    border: 1px solid #ddd;
	}
	
</style>
<!-- 그리드 스택  -->
<div class="grid-stack">
	<!-- 그리드스택 아이템 1 (물리치료실 현황/물리치료 대기실) -->
	<div class="grid-stack-item" gs-w="4" gs-h="5">
		<div class="grid-stack-item-content">
			<h4 class="h4-title1">물리치료실 현황</h4>
			<table class="table2">
				<c:set var="cnt" value="0" />
				<c:forEach begin="0" end="2">
					<tr>
						<c:forEach begin="0" end="2">
							<td>
								<button id="${ptBedList[cnt].ptBedCd }" type="button" class="bedbutton" data-rcp-no="${ptBedList[cnt].rcpNo }" onclick="f_clk(this)">
									<c:if test="${empty ptBedList[cnt].rcpNo}">
										<c:url value='/resources/images/ptbedemty.png' var="imgUrl" />
									</c:if>
									<c:if test="${not empty ptBedList[cnt].rcpNo}">
										<c:url value='/resources/images/ptbedfull.png' var="imgUrl" />
									</c:if>
									<img src="${imgUrl}" alt="물리치료bed" class="pic pthis" />
									<div class="patient">${ptBedList[cnt].rcpNo }${ptBedList[cnt].paName}</div>
								</button>
							</td>
							<c:set var="cnt" value="${cnt+1 }" />
						</c:forEach>
					</tr>
				</c:forEach>
			</table>
			<h4 class="h4-title1">물리치료실 대기 현황</h4>
			<table class="table1">
				<thead>
					<tr>
						<td>환자 번호</td>
						<td>환자 이름</td>
						<td>생년월일</td>
						<td>배정</td>
					</tr>
				</thead>
				<c:set var="cnt" value="0" />
				<c:forEach items="${ptAssinmentList}" var="ptAssinment">
					<tr id="tr_${ptAssinment.rcpNo }">
						<td><button id="ptNoDt" type="button" data-rcp-no="${ptAssinment.rcpNo}" onclick="ptNoDtClick(this)">${ptAssinment.paNo}</button></td>
						<td>${ptAssinment.paName}</td>
						<td>${ptAssinment.paReg}</td>
						<td>
							<button class="assignmentbutton" type="button" data-pa-no="${ptAssinment.paNo}"
								data-rcp-no="${ptAssinment.rcpNo }"
								data-name="${ptAssinment.paName}"
								data-reg="${ptAssinment.paReg}">배정</button>
						<td>
					</tr>
					<c:set var="cnt" value="${cnt+1}"></c:set>
				</c:forEach>
			</table>
		</div>
	</div>

	<!-- 그리드스택 아이템 2 (환자 검색) -->
	<div class="grid-stack-item" gs-w="4" gs-h="2">
		<div class="grid-stack-item-content">
			<div>
				<h4 class="h4-title1">환자 조회</h4>
				<form id="serarchButton" class="search-form" name="searchForm" onkeydown="f_block()">
					<select id="searchOption" class="radi-select ">
						<option value='name'>환자 이름</option>
						<option value='no'>환자 번호</option>
					</select> 
					<input name="searchBtn" class="radi-input" id="searchWord" type="text" value=""> 
					<input class="btn-submit" id="Search" type="button" value="검색"> 
					<input style="display: none;" type="hidden" id="paNoHidden" value="" />
				</form>
			</div>
			<div class="scroller">
			<table class="table1 table-blue scrollshover" style="margin-top: 0px;" >
				<thead class="fixedHeader">
					<tr>
						<td>환자번호</td>
						<td>이름</td>
						<td>생년월일</td>
						<td>성별</td>
						<td>내원일자</td>
					</tr>
				</thead>
				<tbody id="ptViewBody">
					<tr>
						<td id='p_No'></td>
						<td id='p_Nm'></td>
						<td id='p_reg'></td>
						<td id='p_sex'></td>
						<td id='p_record'></td>
					</tr>
				</tbody>
			</table>
			</div>
		</div>
	</div>


	<!-- 그리드스택 아이템 3  진료일지 작성 -->
	<div class="grid-stack-item" gs-w="4" gs-h="3">
		<div class="grid-stack-item-content">
			<div>
				<h4 class="h4-title1">치료 일지</h4>
				<div class="mb-3 row">
			    <label for="ptDocument-input" class="col-sm-2 col-form-label" >진료차트</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="writeChartCd" readonly="readonly">
			    </div>
			 	</div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">진료일자</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="writeChartDate" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">진료실</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="writeChartRoom" readonly="readonly">
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">환자접수번호</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="writeChartPaNo" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">환자이름</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="writeChartPaNm" readonly="readonly">
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">생년월일</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control"  id="writeChartPaReg" readonly="readonly">
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">상병코드</label>
			    <div class="col-sm-10">
			     <input type="text" class="form-control"  id="writeChartRc" readonly="readonly">
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">증상 </label>
			    <div class="col-sm-10">
			     <input type="text" class="form-control"  id="writeChartRl" readonly="readonly">  
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">치료 내용 </label>
			    <div class="col-sm-10">
			      <textarea class="form-control" id="writeChartText" ></textarea>  
			    </div>
			 </div>
			<button class="" id="writeInsert" type="button" value="등록" onclick="writeInsertClick(this)">등록</button> 
			<button class="" id="writeUpdate" type="button" value="수정" onclick="writeUpdateClick(this)">수정</button>
			
			</div>
		</div>
	</div>
	<div class="grid-stack-item" gs-w="2" gs-h="3">
		<div class="grid-stack-item-content">
			<h4 class="h4-title1">진료 차트</h4>
			<div> <!-- class="스크롤" -->
				<div class="mb-3 row">
			    <label for="ptDocument-input" class="col-sm-2 col-form-label">진료 차트</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-trmCd" readonly="readonly" >
			    </div>
			 	</div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">진료 일자</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-date" readonly="readonly">
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">진료실</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-doctor" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">환자 접수번호</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-rcpNo" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">환자 이름</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-paNm" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">생년월일</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-paReg" readonly="readonly" >
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">상병코드</label>
			    <div class="col-sm-10">
			      <input type="text" class="form-control" id="pt-discode" readonly="readonly" >  
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">증상</label>
			    <div class="col-sm-10">
			      <textarea class="form-control" id="pt-sym-detail" readonly="readonly" ></textarea>  
			    </div>
			 </div>
			 <div class="mb-3 row">
			    <label for="inputPassword" class="col-sm-2 col-form-label">진단</label>
			    <div class="col-sm-10">
			      <textarea class="form-control" id="pt-trmtext" readonly="readonly"></textarea>  
			    </div>
			 </div>
			</div>
		</div>
	</div>
	<!-- 그리드스택 (치료완료 환자) -->
	<div class="grid-stack-item" gs-w="2" gs-h="3">
		<div class="grid-stack-item-content">
			<h4 class="h4-title1"> Today 진료일지 </h4>
			<table class="table1 table-blue" style="margin-top: 0px;" >
				<thead class="fixedHeader">
					<tr>
						<td>환자 번호</td>			
						<td>이름</td>			
						<td>생년월일</td>			
						<td>치료일지</td>			
					</tr>
				</thead>
				<tbody id="curePrpect">
					
				</tbody>
			</table>
		</div>
	</div>
	
	<!-- 그리드스택 아이템 5 (이전 물리치료 기록서/select/search) -->
	<div class="grid-stack-item" gs-w="4" gs-h="2">
		<div class="grid-stack-item-content">
			<h4 class="h4-title1">이전 치료 일지</h4>
			<div class="scroller">
				<table class="table1 table-blue" style="margin-top: 0px;" >
					<thead class="fixedHeader">
						<tr>
							<td>환자번호</td>
							<td>이름</td>
							<td>생년월일</td>
							<td>내원일자</td>
							<td>물리치료 기록서</td>
						</tr>
					</thead>
					<tbody id="ptDocumentBody">
						<tr>
							<td id='p_No'></td>
							<td id='p_Nm'></td>
							<td id='p_reg'></td>
							<td id='p_sex'></td>
							<td id='pt_Document'></td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<script type="text/javascript">

//대기 환자 중에서 환자 진료차트 조회하기
$(function(){
	let ptNoDt = $(".ptNoDt").on("submit", function(event){
		alert("대기 환자 중에서 환자 진료차트 조회하기");
	
	});
});

//환자 진료일지 작성하기
$(function(){
	let writeInsert = $(".writeInsert").on("submit", function(event){
		alert("환자 진료일지 작성하기");
	});
});

//진료일지 작성 호출
	const writeInsert=()=>{
		let rcpNo = $(ptNoDt).data("rcpNo");
		$.ajax({
			url : "/HurryUp/pt/ptPatientChart",
			method : "post",
			contentType :  "application/json; charset=utf-8",
			data : JSON.stringify({'rcpNo': rcpNo}),
			dataType : "json",
			success : function(list) {
				console.log("list", list)
				//대기환자 진료차트 
				$('#pt-trmCd').val(list[0].trmCd); //진료차트 trmCd o 
				$('#pt-date').val(list[0].receptionVO.rcpDate); //진료일자 trmdate
				$('#pt-doctor').val(list[0].receptionVO.officeCd); //진료의 doctor
				$('#pt-rcpNo').val(list[0].patientVO.paNo); //환자접수번호 rcpNo
				$('#pt-paNm').val(list[0].patientVO.paName); //환자이름 paName
				$('#pt-paReg').val(list[0].patientVO.paReg); //환자 생년월일 paReg
				$('#pt-discode').val(list[0].symptomVOList[0].symCd); //상병코드 DISEASE_CD 
				$('#pt-sym-detail').val(list[0].symptomVOList[0].symDetail); //증상 SYM_DETAIL
				$('#pt-trmtext').val(list[0].symptomVOList[0].symDetail); //진단
				
				//작성 할 치료일지에 동일한 데이터 뿌려주기
				
				$('#writeChartCd').val(list[0].trmCd); //진료차트
				$('#writeChartDate').val(list[0].receptionVO.rcpDate); //진료일자
				$('#writeChartRoom').val(list[0].receptionVO.officeCd); //진료실
				$('#writeChartPaNo').val(list[0].patientVO.paNo); //환자접수번호
				$('#writeChartPaNm').val(list[0].patientVO.paName); //환자이름
				$('#writeChartPaReg').val(list[0].patientVO.paReg); //생년월일
				$('#writeChartRc').val(list[0].symptomVOList[0].symCd); //상병코드
				$('#writeChartRl').val(list[0].symptomVOList[0].symDetail); //증상
				$('#writeChartText').val(); //치료 내용
				
			},
			erro : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);

			}
		});
	}


//침대에 배정하는 함수
$(function(){
let bedfullform = $("#bedfullform").on("submit",function(event){
	event.preventDefault();
		let data = {
				rcpNo : $("[name=rcpNo]").val()
				,paName : $("[name=paName]").val()
				,ptBedCd : $("[name=ptBedCd]").val()
			}
		console.log("data : " , data)
	$.ajax({
			url : "/HurryUp/pt/ptBedFull",
			method : "post",
			dataType : "json",
			data : JSON.stringify(data),
			contentType :  "application/json; charset=utf-8",
			success : function(resultMap) {
				console.log("resultMap : " , resultMap);
				
				if(resultMap.result>0) {
					Swal.fire('배정이 완료 되었습니다.', '  ', 'success');
					let rcpNo = resultMap.receptionVO.rcpNo;
					let paName = resultMap.receptionVO.patient.paName;
					let bedNo = resultMap.ptAssinmentVO.ptBedCd;
					let pthis = $("#" + bedNo);
					pthis.data("rcpNo",rcpNo);				
					$(pthis).find(".patient").html(`\${rcpNo} \${paName}`);
					$(".bedbutton").removeClass('active');
					
					//밑에 데이타 있는 걸 빼주는 작업//템플릿연산자
					$(`#tr_\${rcpNo }`).remove(); //이거는 보여지는 효과만 준 것임 DB에서 바꿔주는 걸 해야함
					pthis.find(".pthis").attr("src", "<c:url value='/resources/images/ptbedfull.png'/>");
				} else {
					Swal.fire('배정에 실패했습니다.', '  ', 'error');
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
	return false;
	});
	
	// 침대 배정버튼
	$(".assignmentbutton").on("click",function(){
		let rcpNo = $(this).data("rcpNo")
		let paName = $(this).data("name")
		let ptBedCd = $('.table2').find('.active').attr('id')
		console.log(`\${rcpNo} \${paName} \${ptBedCd}`)
		$.ajax({
			url : "/HurryUp/pt/ptBedFull",
			method : "post",
			dataType : "json",
			data : JSON.stringify({'rcpNo': rcpNo, 'paName':paName, 'ptBedCd': ptBedCd}),
			contentType :  "application/json; charset=utf-8",
			success : function(resultMap) {
				console.log("resultMap : " , resultMap);
				
				if(resultMap.result>0) {
					Swal.fire('배정이 완료 되었습니다.', '  ', 'success');
					let pthis = $("#" + resultMap.ptBedCd);
					pthis.data("rcpNo",resultMap.rcpNo);				
					$(pthis).find(".patient").html(`\${resultMap.rcpNo} \${resultMap.paName}`);
					$(".bedbutton").removeClass('active');
					
					//밑에 데이타 있는 걸 빼주는 작업 //템플릿연산자
					$(`#tr_\${resultMap.rcpNo }`).remove(); //이거는 보여지는 효과만 준 것임 DB에서 바꿔주는 걸 해야함
					pthis.find(".pthis").attr("src", "<c:url value='/resources/images/ptbedfull.png'/>");
				} else {
					Swal.fire('배정에 실패했습니다.', '  ', 'error');
				}
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});

	});
});

//bedbutton 클릭했을 때 효과 이벤트
$(".bedbutton").on("click",function(){
	$('.table2').find('button').removeClass('active')
	$(this).addClass('active'); //toggleClass : 클래스를 넣었다가 붙였다가 하는 것
});



//대기 환자 진료차트 보기
	const ptNoDtClick=()=>{
		let rcpNo = $(ptNoDt).data("rcpNo");
		$.ajax({
			url : "/HurryUp/pt/ptPatientChart",
			method : "post",
			contentType :  "application/json; charset=utf-8",
			data : JSON.stringify({'rcpNo': rcpNo}),
			dataType : "json",
			success : function(list) {
				console.log("list", list)
				//대기환자 진료차트 
				$('#pt-trmCd').val(list[0].trmCd); //진료차트 trmCd o 
				$('#pt-date').val(list[0].receptionVO.rcpDate); //진료일자 trmdate
				$('#pt-doctor').val(list[0].receptionVO.officeCd); //진료의 doctor
				$('#pt-rcpNo').val(list[0].patientVO.paNo); //환자접수번호 rcpNo
				$('#pt-paNm').val(list[0].patientVO.paName); //환자이름 paName
				$('#pt-paReg').val(list[0].patientVO.paReg); //환자 생년월일 paReg
				$('#pt-discode').val(list[0].symptomVOList[0].symCd); //상병코드 DISEASE_CD 
				$('#pt-sym-detail').val(list[0].symptomVOList[0].symDetail); //증상 SYM_DETAIL
				$('#pt-trmtext').val(list[0].symptomVOList[0].symDetail); //진단
				
				//작성 할 치료일지에 동일한 데이터 뿌려주기
				
				$('#writeChartCd').val(list[0].trmCd); //진료차트
				$('#writeChartDate').val(list[0].receptionVO.rcpDate); //진료일자
				$('#writeChartRoom').val(list[0].receptionVO.officeCd); //진료실
				$('#writeChartPaNo').val(list[0].patientVO.paNo); //환자접수번호
				$('#writeChartPaNm').val(list[0].patientVO.paName); //환자이름
				$('#writeChartPaReg').val(list[0].patientVO.paReg); //생년월일
				$('#writeChartRc').val(list[0].symptomVOList[0].symCd); //상병코드
				$('#writeChartRl').val(list[0].symptomVOList[0].symDetail); //증상
				$('#writeChartText').val(); //치료 내용
				
			},
			erro : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);

			}
		});
	}

//배정하는 것
	const f_clk=(pthis)=>{
// 		$(pthis).find(".pic").attr("src","../resources/images/ptbedfull.png"); //pthis안에서 pic를 찾아서 거기에 src=""를 붙인다
		let rcpNo = $(pthis).data("rcpNo");
		let v_bedNo = $(pthis).attr("id");
		$("[name=ptBedCd]").val(v_bedNo);
		
		if(rcpNo) { 
		Swal.fire({
				title : '치료를 완료하시겠습니까?', 
				icon : 'warning',
				showCancelButton: true,
				confirmButtonText: '승인',
                cancelButtonText: '취소'
                }).then((result1) => {
                	console.log("result : " + result1); //object
                	if(result1.isConfirmed) {
                		console.log("Hi Yeji rcpNo : " + rcpNo +  " v_bedNo : " + v_bedNo);
                		$.ajax({
                				url : "/HurryUp/pt/ptBedEmpty",
                				method : "post",
                				data :  JSON.stringify({ptBedCd : v_bedNo, rcpNo : rcpNo}),
                				dataType : "json",
                				contentType :  "application/json; charset=utf-8",
                				success : function(result) {
                					console.log("Hi result pless : " + rcpNo +  " v_bedNo : " + v_bedNo);
                					if(!parseInt(result)) {
                						Swal.fire('치료가 완료 되었습니다.', '', 'success');
                						$(pthis).removeData("rcpNo");
                						$(pthis).removeAttr("data-rcp-no");
                						$(pthis).find(".patient").empty();
                						$(pthis).find(".pthis").attr("src", "<c:url value='/resources/images/ptbedemty.png'/>");
                						$(".bedbutton").removeClass('active');
                						
                						f_completion(result);
                						
                					} else {
                						Swal.fire('베드를 비우는데 실패했습니다.', '  ', 'error');
                					}
                				},
                				error : function(jqXHR, status, error) {
                					console.log(jqXHR);
                					console.log(status);
                					console.log(error);
                				}
                			});               	
                		}
               		 });
		} 
	};

//완료 환자  Today진료일지에 넣어주는  Ajax
f_completion=(result)=>{
	let rcpNo = result.rcpNo
	console.log("다음작업할거임  rcpNo : ", rcpNo); //rcpNo 출력 완료
	$.ajax({
		url : "/HurryUp/pt/ptCompletionText",
		method : "post",
		data :  JSON.stringify({rcpNo : rcpNo}),
		dataType : "json",
		contentType :  "application/json; charset=utf-8",
		success : function(result) {
				console.log("sdsdsdsdsd");
		},
		erro : function(jqXHR, status, error) {
			console.log(jqXHR);
			console.log(status);
			console.log(error);

		}
	});
}
	
//환자 검색
$(function(){
	$("#Search").on("click",function(){
		let searchOption = $("#searchOption option:selected").val();
		let searchWord = $("#searchWord").val();
		let patientTbody = ("#patientTbody");
		console.log(searchOption);
		console.log(searchWord);
		if(searchWord == ' ') {
			swal('검색 실패!', '검색어를 입력해주세요', 'warning');
			return false;
		} 
		
		let data = {
					searchOption:searchOption,
					searchWord:searchWord
		}
		
		$.ajax({
			url : "ptPatientSearch",
			method : "post",
			data : JSON.stringify(data),
			contentType: "application/json;charset=utf-8",
			dataType : "json",
			success : function(result) {
				console.log("result : ",result);
				let paNo = ''
				if(result == null || result.length == 0) {
					//환자가 없을 때
					swal('검색 실패!',"검색하신 환자 정보가 없습니다.",'error');
				} else if(result.length == 1) {
					let trTags = []
					//환자가 한명일 때
					$.each(result, function(index,value){
						paNo = `<input class="paDetail" type="button">${value.paNo}</input>`
						$("#p_No").html(paNo);
						$("#p_Nm").html(value.paName);
						$("#p_reg").html(value.paReg);
						$("#p_sex").html(value.paSex);	
					});
				} else {
// 					환자가 여러명일 때
				}
				
				$(".paDetail").on("click",function(event){
					console.log("체크")
					let pat = $(this).val("paNo");
					console.log(pat);
					
					}).val(paNo);
			},
			error : function(jqXHR, status, error) {
				console.log(jqXHR);
				console.log(status);
				console.log(error);
			}
		});
		$("#searchWord").val("");
	});
});

/**
 * patient List get 방식 출력
 */
 $.ajax({
		url : "patientList",
		method : "get",
		contentType : "application/json;charset=utf-8",
		dataType : "json",
		success : function(result) { 

			let trTags = [];
			$.each(result, function(i, v){
// 				console.log(v);
				let trTag = $("<tr>").attr("class","ptClass")
				.append(
					$("<td>").html(v.paNo)
					, $("<td>").html(v.paName)
					, $("<td>").html(v.paReg)
					, $("<td>").html(v.paSex)
					, $("<input>").attr({
						"type":"hidden",
						"value": `\${v.paNo}`
						})
				).data("waitVO",v);
				trTags.push(trTag);
			})
			$("#ptViewBody").html(trTags);
			$(".ptClass").on("click",function(){
				console.log(this);
				let value = $(this).children('input').val();
				console.log(value);
				filmsubmit(value);
			})	
		},
		error : function(jqXHR, status, error) {
			console.log(jqXHR);
			console.log(status);
			console.log(error);
		}
	});
	
	//ptDocument 기록서 get방식으로 출력
	$.ajax({
	url : "ptDocumentList",
	method : "get",
	dataType : "json",
	contentType : "application/json;charset=utf-8",
	success : function(result) {
			console.log("================" + result);
			console.log(result.length);
			let trTags = [];
			$.each(result, function(i,v) {
				console.log(v);
				let trTag = $("<tr>").attr("class","ptDocumentClass").append(
							$("<td>").html(v.paNo)
							, $("<td>").html(v.paName)
							, $("<td>").html(v.paReg)
							, $("<td>").html(v.paSex)
							, $("<td>").html(v.ptNo)
							, $("<input>").attr({
								"typr" : "hidden",
								"value" : `\${v.paNo}`
							})
				).data("ptDocumentVO", v);
				trTags.push(trTag);
			})
			$("#ptDocumentBody").html(trTags);
	},
	erro : function(jqXHR, status, error) {
		console.log(jqXHR);
		console.log(status);
		console.log(error);

	}
});

/* 그리드 스택  */	
	GridStack.init();
	//시윤//끊어서 호출해라
// 	let rcpNo= -1;
// 	let f_getChart = function(){
// 		$.ajax()
// 		rcpNo = resp.rcpNo;
// 	};
	
// 	let f_getRcp = function(p_rcpNo){
		
// 	};
// 	f_getRcp(rcpNo)
</script>